name: Build
on: [pull_request, push]
jobs:
  build:
    environment: Default
    runs-on: ubuntu-latest
    steps:
      - name: Install and Fix Build Tools
        run: |
          /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "build-tools;33.0.0" --sdk_root=${ANDROID_SDK_ROOT}
          cd /usr/local/lib/android/sdk/build-tools/33.0.0 && mv d8 dx &&
          cd /usr/local/lib/android/sdk/build-tools/33.0.0/lib && mv d8.jar dx.jar
      - name: Install NDK
        run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;23.1.7779620" --sdk_root=${ANDROID_SDK_ROOT}
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Lint
        env:
          OCB_CLIENT_ID: ${{ secrets.OCB_CLIENT_ID }}
          OCB_SCOPE: ${{ secrets.OCB_SCOPE }}
          OCB_RECOMMENDER_URL: ${{ secrets.OCB_RECOMMENDER_URL }}
          OCB_OFFER_PORTAL_URL: ${{ secrets.OCB_OFFER_PORTAL_URL }}
          PARTNER_BE_URL: ${{ secrets.PARTNER_BE_URL }}
          PARTNER_CREDENTIALS: ${{ secrets.PARTNER_CREDENTIALS }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
        run: cd SmartCredentials_aOS && ./gradlew lint 
      - name: Test
        env:
          OCB_CLIENT_ID: ${{ secrets.OCB_CLIENT_ID }}
          OCB_SCOPE: ${{ secrets.OCB_SCOPE }}
          OCB_RECOMMENDER_URL: ${{ secrets.OCB_RECOMMENDER_URL }}
          OCB_OFFER_PORTAL_URL: ${{ secrets.OCB_OFFER_PORTAL_URL }}
          PARTNER_BE_URL: ${{ secrets.PARTNER_BE_URL }}
          PARTNER_CREDENTIALS: ${{ secrets.PARTNER_CREDENTIALS }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
        run: cd SmartCredentials_aOS && ./gradlew test
      - name: Prepare signing keys
        env:
          GPG_KEY_CONTENTS: ${{ secrets.OSSRH_GPG_SECRET_KEY_BASE64 }}
        run: |
          echo 'Create authentication module signing key'
          cd SmartCredentials_aOS/authentication
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create authorization module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/authorization
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create camera module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/camera
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create core module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/core
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create documentscanner module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/documentscanner
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create eid module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/eid
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create networking module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/networking
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create otp module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/otp
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create persistentlogging module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/persistentlogging
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create pushnotifications module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/pushnotifications
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create qrlogin module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/qrlogin
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create security module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/security
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create storage module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/storage
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create identity provider module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/identityprovider
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
          echo 'Create oneclickbusinessclient module signing key'
          cd $GITHUB_WORKSPACE/SmartCredentials_aOS/oneclickbusinessclient
          echo $GPG_KEY_CONTENTS | base64 --decode > ./release.asc
          gpg --quiet --output ./release.gpg --dearmor ./release.asc
      - name: Assemble all subproject aar files
        run: cd SmartCredentials_aOS && ./gradlew assembleRelease && ./gradlew publishToMavenLocal
        env:
          OCB_CLIENT_ID: ${{ secrets.OCB_CLIENT_ID }}
          OCB_SCOPE: ${{ secrets.OCB_SCOPE }}
          OCB_RECOMMENDER_URL: ${{ secrets.OCB_RECOMMENDER_URL }}
          OCB_OFFER_PORTAL_URL: ${{ secrets.OCB_OFFER_PORTAL_URL }}
          PARTNER_BE_URL: ${{ secrets.PARTNER_BE_URL }}
          PARTNER_CREDENTIALS: ${{ secrets.PARTNER_CREDENTIALS }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          OSSRH_GPG_SECRET_KEY_ID: ${{ secrets.OSSRH_GPG_SECRET_KEY_ID }}
          OSSRH_GPG_SECRET_KEY_BASE64: ${{ secrets.OSSRH_GPG_SECRET_KEY_BASE64 }}
          OSSRH_GPG_SECRET_KEY_RING_FILE: ${{ secrets.OSSRH_GPG_SECRET_KEY_RING_FILE }}
          OSSRH_GPG_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
      - name: Upload Authentication AAR
        uses: actions/upload-artifact@v2
        with:
            name: authentication
            path: SmartCredentials_aOS/authentication/build/outputs/aar/
      - name: Build Authentication Sample Application
        run: cd samples/authentication && chmod +x ./gradlew && ./gradlew build && ./gradlew assembleRelease              
      - name: Upload Authentication Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/authentication/app/build/outputs/apk/release/            
            
      - name: Upload Authorization AAR
        uses: actions/upload-artifact@v2
        with:
            name: authorization
            path: SmartCredentials_aOS/authorization/build/outputs/aar/
      - name: Build Authorization Sample Application
        run: cd samples/authorization && chmod +x ./gradlew && ./gradlew build && ./gradlew assembleRelease              
      - name: Upload Authorization Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/authorization/app/build/outputs/apk/release/ 
            
      - name: Upload Camera AAR
        uses: actions/upload-artifact@v2
        with:
            name: camera
            path: SmartCredentials_aOS/camera/build/outputs/aar/
      - name: Build Camera Sample Application
        run: cd samples/camera && chmod +x ./gradlew && ./gradlew build && ./gradlew assembleRelease              
      - name: Upload Camera Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/camera/app/build/outputs/apk/release/        
            
      - name: Upload Core AAR
        uses: actions/upload-artifact@v2
        with:
            name: core
            path: SmartCredentials_aOS/core/build/outputs/aar/
      - name: Build Core Sample Application
        run: cd samples/core && chmod +x ./gradlew && ./gradlew build && ./gradlew assembleRelease    
      - name: Upload Core Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/core/app/build/outputs/apk/release/    
            
      - name: Upload Document Scanner AAR
        uses: actions/upload-artifact@v2
        with:
            name: documentscanner
            path: SmartCredentials_aOS/documentscanner/build/outputs/aar/
      - name: Build Document Scanner Sample Application
        run: cd samples/documentscanner && chmod +x ./gradlew && ./gradlew build && ./gradlew assembleRelease    
      - name: Upload Document Scanner Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/documentscanner/app/build/outputs/apk/release/      
            
      - name: Upload eID AAR
        uses: actions/upload-artifact@v2
        with:
            name: eid
            path: SmartCredentials_aOS/eid/build/outputs/aar/
            
      - name: Upload Networking AAR
        uses: actions/upload-artifact@v2
        with:
            name: networking
            path: SmartCredentials_aOS/networking/build/outputs/aar/
            
      - name: Upload OTP AAR
        uses: actions/upload-artifact@v2
        with:
            name: otp
            path: SmartCredentials_aOS/otp/build/outputs/aar/
      - name: Build OTP Sample Application
        run: cd samples/otp && chmod +x ./gradlew && ./gradlew build && ./gradlew assembleRelease    
      - name: Upload OTP Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/otp/app/build/outputs/apk/release/     
           
      - name: Upload Persistent Logging AAR
        uses: actions/upload-artifact@v2
        with:
            name: persistentlogging
            path: SmartCredentials_aOS/persistentlogging/build/outputs/aar/
            
      - name: Upload Push Notifications AAR
        uses: actions/upload-artifact@v2
        with:
            name: pushnotifications
            path: SmartCredentials_aOS/pushnotifications/build/outputs/aar/
      - name: Build Push Notifications Sample Application
        run: cd samples/pushnotifications && chmod +x ./gradlew && ./gradlew build && ./gradlew assembleRelease    
      - name: Upload Push Notifications Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/pushnotifications/app/build/outputs/apk/release/        
            
      - name: Upload QR Login AAR
        uses: actions/upload-artifact@v2
        with:
            name: qrlogin
            path: SmartCredentials_aOS/qrlogin/build/outputs/aar/
      - name: Build QR Login Sample Application
        run: cd samples/qrlogin && chmod +x ./gradlew && ./gradlew build && ./gradlew assembleRelease    
      - name: Upload QR Login Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/qrlogin/app/build/outputs/apk/release/     
            
      - name: Upload Security AAR
        uses: actions/upload-artifact@v2
        with:
            name: security
            path: SmartCredentials_aOS/security/build/outputs/aar/
            
      - name: Upload Storage AAR
        uses: actions/upload-artifact@v2
        with:
            name: storage
            path: SmartCredentials_aOS/storage/build/outputs/aar/
      - name: Build Storage Sample Application
        run: cd samples/storage && chmod +x ./gradlew && ./gradlew build && ./gradlew assembleRelease    
      - name: Upload Storage Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/storage/app/build/outputs/apk/release/
      - name: Upload Identity Provider AAR
        uses: actions/upload-artifact@v2
        with:
            name: identityprovider
            path: SmartCredentials_aOS/identityprovider/build/outputs/aar/
      - name: Upload Identity Provider Sample APK
        uses: actions/upload-artifact@v2
        with:
            name: sampleApplications
            path: samples/oneclickbusiness/app/build/outputs/apk/release/
      - name: Upload OneClickBusinessClient AAR
        uses: actions/upload-artifact@v2
        with:
            name: oneclickbusinessclient
            path: SmartCredentials_aOS/oneclickbusinessclient/build/outputs/aar/
